<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.wso2.vick</groupId>
        <artifactId>org.wso2.vick.global.plane.dockerfiles.sp</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>org.wso2.vick.global.plane.dockerfiles.sp.worker</artifactId>
    <name>WSO2 VICK - Dockerfiles - Stream Processor Worker</name>
    <description>Dockerfiles for WSO2 VICK Stream Processor Worker</description>
    <packaging>pom</packaging>

    <dependencies>
        <dependency>
            <groupId>org.wso2.vick</groupId>
            <artifactId>org.wso2.vick.telemetry.receiver</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.vick</groupId>
            <artifactId>gogoproto-java</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf-lite</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc.wso2</groupId>
            <artifactId>grpc-wso2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opencensus</groupId>
            <artifactId>opencensus-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opencensus</groupId>
            <artifactId>opencensus-contrib-grpc-metrics</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.vick</groupId>
            <artifactId>org.wso2.vick.tracing.receiver</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.api.grpc</groupId>
            <artifactId>proto-google-common-protos</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf.wso2</groupId>
            <artifactId>protobuf-wso2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zipkin.zipkin2</groupId>
            <artifactId>zipkin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.extension.siddhi.io.http</groupId>
            <artifactId>siddhi-io-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.vick</groupId>
            <artifactId>org.wso2.vick.observability.api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.vick</groupId>
            <artifactId>org.wso2.vick.observability.model.generator</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Copy Maven dependencies into target/files/lib -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-osgi-libs</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/files/lib</outputDirectory>
                            <excludeArtifactIds>
                                grpc-protobuf, grpc-protobuf-lite, grpc-stub, opencensus-api,
                                opencensus-contrib-grpc-metrics, proto-google-common-protos, zipkin
                            </excludeArtifactIds>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-non-osgi-libs</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/files/non-osgi/</outputDirectory>
                            <excludeArtifactIds>
                                org.wso2.vick.telemetry.receiver, commons-io, gogoproto-java, grpc-wso2,
                                org.wso2.vick.tracing.receiver, protobuf-wso2, org.wso2.vick.observability.api,
                                org.wso2.vick.observability.model.generator
                            </excludeArtifactIds>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--Create OSGI bundles from Non Osgi jars-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeProjectDependencies>true</includeProjectDependencies>
                    <includePluginDependencies>true</includePluginDependencies>
                    <mainClass>org.wso2.carbon.tools.CarbonToolExecutor</mainClass>
                    <arguments>
                        <argument>${project.build.directory}/files/non-osgi/</argument>
                        <argument>${project.build.directory}/files/lib/</argument>
                        <argument>${project.build.directory}</argument>
                    </arguments>
                    <systemProperties>
                        <systemProperty>
                            <key>wso2.carbon.tool</key>
                            <value>jar-to-bundle-converter</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.wso2.carbon</groupId>
                        <artifactId>org.wso2.carbon.tools.core</artifactId>
                        <version>5.2.8</version>
                    </dependency>
                </dependencies>
            </plugin>

             <!--Build Docker image-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <repository>${docker.repo.name}/wso2sp-worker</repository>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
